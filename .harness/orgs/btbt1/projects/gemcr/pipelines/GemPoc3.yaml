pipeline:
  name: Gem_Poc3
  identifier: GemPoc3
  projectIdentifier: gemcr
  orgIdentifier: btbt1
  tags: {}
  stages:
    - stage:
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.central_ci
              namespace: harness-delegate-ng
              annotations:
                dynatrace.com/inject: "false"
              automountServiceAccountToken: false
              tolerations:
                - effect: NoSchedule
                  key: user-pre
                  operator: Equal
                  value: dedicated
              nodeSelector:
                node_pool: ew2-psv-pre-tool01-svp01-knp01-user
              containerSecurityContext:
                capabilities:
                  drop:
                    - ALL
                privileged: true
                allowPrivilegeEscalation: true
              harnessImageConnectorRef: account.harness_ci_addon_rtl
              os: Linux
          execution:
            steps:
              - stepGroup:
                  name: Restore Cache
                  identifier: Restore_Cache
                  template:
                    templateRef: account.CI_StepGroup_Restore_Cache
                    versionLabel: v0.x.x
                    templateInputs:
                      variables:
                        - name: CACHE_KEY
                          type: String
                          value: "{{ checksum \"<+stage.variables.DEPENDENCY_FILE>\" }}"
                        - name: SKIP_RESTORE
                          type: String
                          value: <+input>.default(false).allowedValues(true,false)
                        - name: BUCKET_TYPE
                          type: String
                          value: build
              - step:
                  type: Run
                  name: Package Application
                  identifier: Package_Application
                  spec:
                    connectorRef: account.gcp_rtl_ssv_release_gar
                    image: europe-docker.pkg.dev/ssv-rtl-devops-registry-624/release/python:<+stage.variables.PYTHON_VERSION>
                    shell: Sh
                    command: |-
                      touch pythondockerfile
                      cat > pythondockerfile <<- EOM
                      RUN pip install -r requirements.txt
                      CMD ["uvicorn main:app --reload --host 0.0.0.0 --port 8000 &"]
                      EOM
                      cat pythondockerfile
                    resources:
                      limits:
                        memory: <+input>.default(4Gi).regex(^(500Mi|([5-7][0-9]{2}|[1-7][0-9]{3}|8000)Mi|([1-7]Gi|8Gi))$)
                        cpu: <+input>.default(2).regex(^(500m|[5-9][0-9]{2}m|[1-3]([0-9]{2})?m?|[1-3](\.[0-9]+)?|4(\.0+)?)$)
                  when: <+input>
              - step:
                  type: Run
                  name: Output
                  identifier: Output
                  spec:
                    connectorRef: account.gcp_rtl_ssv_release_gar
                    image: europe-docker.pkg.dev/ssv-rtl-devops-registry-624/release/python:<+stage.variables.PYTHON_VERSION>
                    shell: Sh
                    command: |-
                      PKG_NAME=<+stage.spec.execution.steps.Initialise_Build_Engine.output.outputVariables.PKG_NAME>
                      PKG_VERSION=<+stage.spec.execution.steps.Initialise_Build_Engine.output.outputVariables.PKG_VERSION>
                      PKG_PATH=<+stage.spec.execution.steps.Initialise_Build_Engine.output.outputVariables.ARTIFACT_URL>
                    outputVariables:
                      - name: PKG_NAME
                      - name: PKG_VERSION
                      - name: PKG_PATH
              - step:
                  type: Background
                  name: python server
                  identifier: python_server
                  spec:
                    connectorRef: account.gcp_rtl_ssv_release_gar
                    image: europe-docker.pkg.dev/ssv-rtl-devops-registry-624/release/python:<+stage.variables.PYTHON_VERSION>
                    shell: Sh
                    command: |-
                      pip install -r requirements.txt
                      uvicorn main:app --reload --host 0.0.0.0 --port 8000 &
              - step:
                  type: Run
                  name: test connection to server
                  identifier: test_connection_to_server
                  spec:
                    connectorRef: account.gcp_rtl_ssv_release_gar
                    image: europe-docker.pkg.dev/ssv-rtl-devops-registry-624/release/python:<+stage.variables.PYTHON_VERSION>
                    shell: Sh
                    command: |-
                      sleep 30
                      curl localhost:8000
                  when:
                    stageStatus: Success
          sharedPaths:
            - /shared
            - /shared/scan_results
            - /shared/pipcache
          caching:
            enabled: true
            override: false
        variables:
          - name: DEPENDENCY_FILE
            type: String
            description: Override for dependency file if dependencies are not held in the pyproject.toml file
            required: false
            value: <+input>.default(pyproject.toml)
          - name: PYTHON_VERSION
            type: String
            default: 3.13.3
            description: Version of Python. Default version - 3.13.3. Available versions - 3.12.10, 3.13.3, 3.14.0b1.
            required: false
            value: <+input>.default(3.13.3).allowedValues(3.12.10,3.13.3,3.14.0b1)
          - name: ARTEFACT_CACHE_LOCATION
            type: String
            description: Path of the Artefacts to be written to the Artefact Cache. Data stored in the Artefact cache will be available for retrieval only within subsequent Stages in the same pipeline run which generated the artefact
            required: true
            value: <+input>.default(dist)
          - name: CMDB_APPID
            type: String
            description: CMDB_APPID of the pipeline. (e.g. al34524)
            required: true
            value: <+pipeline.tags.cmdb_appid>
          - name: PYTHON_LOG_LEVEL
            type: String
            description: Python log level. Valid inputs - DEBUG, INFO, CRITICAL, WARNING, ERROR
            required: true
            value: <+input>.default(INFO).allowedValues(DEBUG,INFO,CRITICAL,WARNING,ERROR)
          - name: NAME_OVERRIDE
            type: String
            description: App name override - Required only if not in pyproject.toml, or to override pyproject.toml
            value: <+input>.regex(^[a-z0-9]*(?:[._-][a-z0-9]+)*$)
          - name: VERS_OVERRIDE
            type: String
            description: App version override - Required only if not in pyproject.toml, or to override pyproject.toml
            value: <+input>.regex(^[a-zA-Z0-9._-]*$)
          - name: ORG_ID
            type: String
            description: "Override default org identifier with underscores replaced with hyphens so it is a valid string for container repository paths "
            required: true
            value: <+<+org.identifier>.toLowerCase().replace("_","-")>
          - name: PROJECT_ID
            type: String
            description: Override default project identifier with underscores replaced with hyphens so it is a valid string for container repository paths
            required: true
            value: <+<+project.identifier>.toLowerCase().replace("_","-")>
          - name: PUBLISH_PACKAGE
            type: String
            description: Boolean value for publishing to Nexus Sonatype Repository (SAR - artefacts.lloydsbanking.cloud)
            required: true
            value: <+input>.default(false).allowedValues(true, false)
          - name: NEXUS_REGISTRY_VISIBILITY
            type: String
            description: Choose the visibility of your package in your T2 Nexus Sonatype Repository (innersource or private.) NOTE - this must have been created within backsatge first.
            required: true
            value: <+input>.default(private).allowedValues(innersource, private)
          - name: NEXUS_REGISTRY_VERSION
            type: String
            description: Choose the version to push to for your package in your T2 Nexus Sonatype Repository (staging or release). NOTE - this must have been created within backstage first.
            required: true
            value: <+input>.default(staging).allowedValues(staging, release, both)
          - name: TEST_CMD_OVERRIDE
            type: String
            description: Python test command. Default - pytest
            required: true
            value: <+input>.default(pytest)
          - name: BUILD_CMD_OVERRIDE
            type: String
            description: Python build command. Default - pythong3 -m build
            required: true
            value: <+input>.default(python3 -m build)
          - name: PUBLISH_CMD_OVERRIDE
            type: String
            description: Python publish command. Default - python3 -m twine
            required: true
            value: <+input>.default(python3 -m twine)
        failureStrategies: <+input>
        name: GCPython
        identifier: GCPython
        description: ""
  properties:
    ci:
      codebase:
        connectorRef: Github_connector
        repoName: ma_gemini_langchain
        build: <+input>
        sparseCheckout: []
