pipeline:
  name: GemPoc3
  identifier: GemPoc3
  projectIdentifier: gemcr
  orgIdentifier: btbt1
  tags: {}
  stages:
    - stage:
        name: Build test and run
        identifier: Build_test_and_run
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: false
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.central_ci
              namespace: ns-aced9b
              automountServiceAccountToken: true
              nodeSelector: {}
              containerSecurityContext:
                capabilities:
                  drop:
                    - ALL
                privileged: true
                allowPrivilegeEscalation: true
              os: Linux
          execution:
            steps:
              - step:
                  type: Run
                  name: Code compile
                  identifier: Code_compile
                  spec:
                    connectorRef: account.gcp_rtl_ssv_release_gar
                    image: europe-docker.pkg.dev/ssv-rtl-devops-registry-624/release/python:<+stage.variables.PYTHON_VERSION>
                    shell: Sh
                    command: |-
                      touch pythondockerfile
                      cat > pythondockerfile <<- EOM
                      RUN pip install -r requirements.txt
                      EOM
                      cat pythondockerfile
              - step:
                  type: Run
                  name: Output
                  identifier: Output
                  spec:
                    connectorRef: account.gcp_rtl_ssv_release_gar
                    image: europe-docker.pkg.dev/ssv-rtl-devops-registry-624/release/python:<+stage.variables.PYTHON_VERSION>
                    shell: Sh
                    command: |-
                      PKG_NAME=<+stage.spec.execution.steps.Initialise_Build_Engine.output.outputVariables.PKG_NAME>
                      PKG_VERSION=<+stage.spec.execution.steps.Initialise_Build_Engine.output.outputVariables.PKG_VERSION>
                      PKG_PATH=<+stage.spec.execution.steps.Initialise_Build_Engine.output.outputVariables.ARTIFACT_URL>
              - step:
                  type: Run
                  name: Python server
                  identifier: Python_server
                  spec:
                    connectorRef: account.gcp_rtl_ssv_release_gar
                    image: europe-docker.pkg.dev/ssv-rtl-devops-registry-624/release/python:<+stage.variables.PYTHON_VERSION>
                    shell: Sh
                    command: uvicorn main:app --reload --port 8002 &
              - step:
                  type: Run
                  name: test connection to server
                  identifier: test_connection_to_server
                  spec:
                    connectorRef: account.gcp_rtl_ssv_release_gar
                    image: europe-docker.pkg.dev/ssv-rtl-devops-registry-624/release/python:<+stage.variables.PYTHON_VERSION>
                    shell: Sh
                    command: |-
                      sleep 20
                       curl -X POST http://127.0.0.1:8002/ask_database -H "Content-Type: application/json" -d '{"question": "Give me my top  accounts and balances?"}'
  properties:
    ci:
      codebase:
        connectorRef: Github_connector
        repoName: ma_gemini_langchain
        build: <+input>
        sparseCheckout: []
